version: '3.8'

services:
    foo:
        ports:
            - "1234:1234"
        volumes:
            - /etc/localtime:/etc/localtime:ro
        environment:
            - ENV=local                                 # environment name
            #- CONTAINER_NAME=                          # container name (defaut: hostname of the container)
            #- CONTAINER_RESOLVER=route                 # IP resolver method for container (disable/route/interface, default: route)
            #- CONTAINER_RESOLVER_INTERFACENAME=eth0    # network interface name for IP resolver (default: eth0)
            #- CONTAINER_RESOLVER_INTERFACETYPE=inet    # network interface type for IP resolver (inet/inet6, default: inet)
            #- CONTAINER_WAITFOR_HOST=                  # host to wait for container startup
            #- CONTAINER_WAITFOR_PORT=                  # port to wait for container startup
            #- VAULT_ADDR=                              # vault address (URL)
            #- VAULT_TLS=0                              # enable TLS
            #- VAULT_TLSCAFILE=                         # TLS CA certificate file
            #- VAULT_TLSCAPATH=                         # TLS CA directory
            #- VAULT_TLSCERTFILE=                       # TLS client certificate file
            #- VAULT_TLSKEYFILE=                        # TLS client certificate key file
            #- VAULT_TLSSERVERNAME=                     # SNI server name for validation
            #- VAULT_TLSVERIFY=0                        # enable TLS peer verification
            #- VAULT_TOKEN=                             # vault token
            #- VAULT_SECRET=                            # secret path
            #- CONSUL_ADDR=                             # consul address (host:port)
            #- CONSUL_TLS=0                             # enable TLS
            #- CONSUL_TLSCAFILE=                        # TLS CA certificate file
            #- CONSUL_TLSCAPATH=                        # TLS CA bundle file
            #- CONSUL_TLSCERTFILE=                      # TLS client certificate file
            #- CONSUL_TLSKEYFILE=                       # TLS client certificate key file
            #- CONSUL_TLSSERVERNAME=                    # SNI server name for validation
            #- CONSUL_TLSVERIFY=0                       # enable TLS peer verification
            #- CONSUL_TOKEN=                            # consul token
            #- CONSUL_KEYPREFIX=                        # keystore prefix path
            #- CONSUL_SERVICENAME=foo                   # service name to register
            #- CONSUL_SERVICETAGS=local                 # service tags (optional)
            #- CONSUL_SERVICEPORT=1234                  # service port
            #- CONSUL_CHECKTYPE=tcp                     # health check type (none/http/script/tcp/ttl/grpc, default: none)
            #- CONSUL_CHECKINTERVAL=15s                 # health check interval
            #- CONSUL_CHECKNOTES=                       # health check notes (optional)
            #- CONSUL_DEREGISTERCRITICALSERVICEAFTER=   # delay after which the service will be deregistered if this check remains critical (0 to disable)
            #- CONSUL_RESOLVER=container                # IP resolver method for consul service (container/route/interface, by default container)
            #- CONSUL_RESOLVER_INTERFACENAME=eth0       # network interface name for IP resolver (default: eth0)
            #- CONSUL_RESOLVER_INTERFACETYPE=inet       # network interface type for IP resolver (inet/inet6, default: inet)
            #- CONSUL_WAITFOR_SERVICENAME=consul        # consul service name to wait at startup
            #- CONSUL_WAITFOR_SERVICETAG=               # consul service tag to wait at startup

            #
            # Consul checks
            #
            #
            #
            # HTTP health check
            #
            #- CONSUL_CHECKTYPE=http
            #- CONSUL_CHECKHTTPURL=http://foo:1234      # HTTP custom URL
            #- CONSUL_CHECKHTTPPATH=/                   # HTTP path for auto-generated URL (http://<container_ip>:<service_port><path>)
            #- CONSUL_CHECKHTTPTLSSKIPVERIFY=0          # skip TLS certificate verification
            #- CONSUL_CHECKINTERVAL=15s                 # check interval
            #- CONSUL_DEREGISTERCRITICALSERVICEAFTER=   # delay after which the service will be deregistered if this check remains critical (0 to disable)
            #
            # Script health check
            #
            #- CONSUL_CHECKTYPE=script
            #- CONSUL_CHECKSCRIPT=/usr/local/bin/healthcheck.sh # script to execute
            #- CONSUL_CHECKDOCKERCONTAINERID=                   # docker container id
            #- CONSUL_CHECKSHELL=/bin/bash                      # custom shell
            #- CONSUL_CHECKINTERVAL=15s                         # check interval
            #- CONSUL_DEREGISTERCRITICALSERVICEAFTER=           # delay after which the service will be deregistered if this check remains critical (0 to disable)
            #
            # TCP health check
            #
            #- CONSUL_CHECKTYPE=tcp
            #- CONSUL_CHECKTCPADDR=static               # custom TCP address if different from service registration
            #- CONSUL_CHECKTCPPORT=5678                 # custom TCP port if different from service registration
            #- CONSUL_CHECKINTERVAL=15s                 # check interval
            #- CONSUL_DEREGISTERCRITICALSERVICEAFTER=   # delay after which the service will be deregistered if this check remains critical (0 to disable)
            #
            # TTL health check
            #
            #- CONSUL_CHECKTYPE=ttl
            #- CONSUL_CHECKTTL=15s                      # TTL update
            #- CONSUL_DEREGISTERCRITICALSERVICEAFTER=   # delay after which the service will be deregistered if this check remains critical (0 to disable)
            #
            # GRPC health check
            #
            #- CONSUL_CHECKTYPE=grpc
            #- CONSUL_CHECKGRPC=1.2.3.4:1234            # GRPC endpoint
            #- CONSUL_CHECKGRPCUSETLS=0                 # Use TLS for GRPC
            #- CONSUL_CHECKINTERVAL=15s                 # check interval
            #- CONSUL_DEREGISTERCRITICALSERVICEAFTER=   # delay after which the service will be deregistered if this check remains critical (0 to disable)
