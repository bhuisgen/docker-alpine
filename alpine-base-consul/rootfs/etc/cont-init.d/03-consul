#!/usr/bin/with-contenv sh

if [ -z "${CONSUL_AGENT}" ]; then
    export CONSUL_AGENT=""
    printf "%s" "${CONSUL_AGENT}" > /var/run/s6/container_environment/CONSUL_AGENT
fi

if [ -z "${CONSUL_PORT}" ]; then
    export CONSUL_PORT=8500
    printf "%s" "${CONSUL_PORT}" > /var/run/s6/container_environment/CONSUL_PORT
fi

if [ -z "${CONSUL_TLS}" ]; then
    export CONSUL_TLS=""
    printf "%s" "${CONSUL_TLS}" > /var/run/s6/container_environment/CONSUL_TLS
fi

if [ -z "${CONSUL_TOKEN}" ]; then
    export CONSUL_TOKEN=""
    printf "%s" "${CONSUL_TOKEN}" > /var/run/s6/container_environment/CONSUL_TOKEN
fi

if [ -z "${CONSUL_KEYPREFIX}" ]; then
    export CONSUL_KEYPREFIX=""
    printf "%s" "${CONSUL_KEYPREFIX}" > /var/run/s6/container_environment/CONSUL_KEYPREFIX
fi

if [ ! -z "${CONSUL_AGENT}" ] && [ ! -z "${CONSUL_SERVICENAME}" ]; then
    if [ -z "${CONSUL_RESOLVER}" ]; then
        CONSUL_RESOLVER=container
    fi

    case ${CONSUL_RESOLVER} in
        container)
            CONSUL_SERVICEADDR=${CONTAINER_IP}
            ;;

        interface)
            if [ -z "${CONTAINER_RESOLVER_INTERFACENAME}" ]; then
                CONSUL_RESOLVER_INTERFACENAME=eth0
            fi

            if [ -z "${CONTAINER_RESOLVER_INTERFACETYPE}" ]; then
                CONSUL_RESOLVER_INTERFACETYPE=inet
            fi

            CONSUL_SERVICEADDR=$(ip -o addr show ${CONSUL_RESOLVER_INTERFACENAME}| \
                grep "${CONSUL_RESOLVER_INTERFACETYPE} "|awk '{ print $4; }'|sed -e 's/\/.*$//')
            ;;

        route)
            CONSUL_SERVICEADDR=$(ip route get 1|awk '{ print $NF; exit; }')
            ;;
    esac

    if [ -z "${CONSUL_SERVICEADDR}" ]; then
        echo "Failed to resolve consul service address, aborting" >&2
        exit 1
    fi

    export CONSUL_SERVICEADDR
    printf "%s" "${CONSUL_SERVICEADDR}" > /var/run/s6/container_environment/CONSUL_SERVICEADDR
fi

if [ ! -z "${CONSUL_AGENT}" ]; then
    options=""
    url="http://${CONSUL_AGENT}:${CONSUL_PORT}"

    if [ ! -z "${CONSUL_TLS}" ] && [ ${CONSUL_TLS} -eq 1 ]; then
        url="https://${CONSUL_AGENT}:${CONSUL_PORT}"

        if [ ! -z "${CONSUL_TLSCAFILE}" ]; then
            options="${options} --cacert ${CONSUL_TLSCAFILE}"
        fi

        if [ ! -z "${CONSUL_TLSCERTFILE}" ]; then
            options="${options} --cert ${CONSUL_TLSCERTFILE}"
        fi

        if [ ! -z "${CONSUL_TLSKEYFILE}" ]; then
            options="${options} --key ${CONSUL_TLSKEYFILE}"
        fi

        if [ -z "${CONSUL_TLSVERIFY}" ] || [ "${CONSUL_TLSVERIFY}" -ne 1 ]; then
            options="${options} --insecure"
        fi
    fi

    if [ ! -z "${CONSUL_TOKEN}" ]; then
        options="${options} --header X-Consul-Token:${CONSUL_TOKEN}"
    fi

    while true; do
        [ $(curl -sI -w '%{http_code}' --out /dev/null ${options} "${url}/v1/agent/self") == "200" ] && break

        echo "Failed to connect to consul agent, retrying in few seconds" >&2
        sleep 15
    done

    if [ ! -z "${CONSUL_WAITFOR_SERVICENAME}" ] && [ ! -z "${CONSUL_WAITFOR_SERVICETAG}" ]; then
        while true; do
            health=$(curl -s ${options} \
                -X GET "${url}/v1/health/service/${CONSUL_WAITFOR_SERVICENAME}?tag=${CONSUL_WAITFOR_SERVICETAG}" \
                -G --data-urlencode "passing=true")
            count=$(echo "$health"|jq -r 'length')
            [ "$count" -gt "0" ] && break

            echo "Failed to get healthy consul service, retrying in few seconds" >&2
            sleep 15
        done
    fi
fi
